---
- hosts: localhost
  vars_files:
    - ../vault.yml
  pre_tasks:
    - name: Create ssl directory
      file:
        path: ~/ssl
        state: directory

  tasks:
    - name: Generate an OpenSSL private key
      openssl_privatekey:
        path: "~/ssl/{{ item | replace('.', '_') }}_iam_client_privkey.pem"
        size: "{{ key_size }}"
        type: "{{ key_type }}"
        #cipher: auto
        #passphrase: "{{ passphrase }}"
        backup: yes
      with_items:
        - "{{ domains }}"
    - name: Generate an OpenSSL Certificate Signing Request with Subject information
      openssl_csr:
        path: "~/ssl/iam_client_{{ item | replace('.', '_') }}.csr"
        privatekey_path: "~/ssl/{{ item | replace('.', '_') }}_iam_client_privkey.pem"
        country_name: "{{ country_name }}"
        organization_name: "{{ organization_name }}"
        email_address: "{{ email_address }}"
        common_name: "{{ item }}"
        #privatekey_passphrase: "{{ passphrase }}"
      with_items:
        - "{{ domains }}"
    - name: Sign certificate with our CA
      openssl_certificate:
        path: ~/ssl/{{ item | replace('.', '_') }}_iam_client_cert.pem
        csr_path: ~/ssl/iam_client_{{ item | replace('.', '_') }}.csr
        provider: ownca
        ownca_path: ~/ssl/ca_cert.pem
        ownca_privatekey_path: ~/ssl/ca_privkey.pem
        ownca_privatekey_passphrase: "{{ ca_passphrase }}"
        ownca_not_after: +365d  # valid for one year
        ownca_not_before: "-1d"  # valid since yesterday
      with_items:
        - "{{ domains }}"
    - name: Generate PKCS#12 file
      openssl_pkcs12:
        action: export
        passphrase: "{{ p12_passphrase }}"
        path: ~/ssl/{{ item | replace('.', '_') }}_iam_client.p12
        friendly_name: "{{ item | replace('.', '_') }}_iam_client"
        privatekey_path: ~/ssl/{{ item | replace('.', '_') }}_iam_client_privkey.pem
        certificate_path: ~/ssl/{{ item | replace('.', '_') }}_iam_client_cert.pem
        # Note that if /opt/certs/ca.pem contains multiple certificates,
        # only the first one will be used. See the other_certificates_parse_all
        # option for changing this behavior.
        state: present
      with_items:
        - "{{ domains }}"
